{"paragraphs":[{"text":"val df = spark.read.format(\"csv\")\n        .option(\"header\",\"true\")\n        .option(\"inferSchema\",\"true\")\n        .load(\"/Sumit/HadoopShareViaWiFi/spark/SparkCode/Spark-The-Definitive-Guide-master/data/retail-data/by-day/2010-12-01.csv\")\n        \ndf.printSchema()\ndf.createOrReplaceTempView(\"dfTable\")\n\n","user":"anonymous","dateUpdated":"2018-07-01T13:34:04+0530","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"table","height":226,"optionOpen":false}}},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"df: org.apache.spark.sql.DataFrame = [InvoiceNo: string, StockCode: string ... 6 more fields]\nroot\n |-- InvoiceNo: string (nullable = true)\n |-- StockCode: string (nullable = true)\n |-- Description: string (nullable = true)\n |-- Quantity: integer (nullable = true)\n |-- InvoiceDate: timestamp (nullable = true)\n |-- UnitPrice: double (nullable = true)\n |-- CustomerID: double (nullable = true)\n |-- Country: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1530431780881_-70265734","id":"20180701-132620_1614359769","dateCreated":"2018-07-01T13:26:20+0530","dateStarted":"2018-07-01T13:33:47+0530","dateFinished":"2018-07-01T13:33:48+0530","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:247"},{"text":"df.where(col(\"InvoiceNo\").equalTo(536365))\n.select(\"InvoiceNo\", \"Description\")\n.show(5,false)\n\n// same as above equal to\ndf.where(col(\"InvoiceNo\") === 536365)\n.select(\"InvoiceNo\", \"Description\")\n.show(5,false)\n\n\n\n// not yet cleared ??\ndf.where(\"InvoiceNo = 53636\")\n.select(\"InvoiceNo\", \"Description\")\n.show(5,false)\n\n\n\n// does not equal \ndf.where(\"InvoiceNo <> 536365\")\n.select(\"InvoiceNo\", \"Description\")\n.show(5,false)\n\n// same as dose not equal\ndf.where(col(\"InvoiceNo\") =!= 536365)\n.select(\"InvoiceNo\", \"Description\")\n.show(5,false)\n\n\n\n","user":"anonymous","dateUpdated":"2018-07-01T21:21:42+0530","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+-----------------------------------+\n|InvoiceNo|Description                        |\n+---------+-----------------------------------+\n|536365   |WHITE HANGING HEART T-LIGHT HOLDER |\n|536365   |WHITE METAL LANTERN                |\n|536365   |CREAM CUPID HEARTS COAT HANGER     |\n|536365   |KNITTED UNION FLAG HOT WATER BOTTLE|\n|536365   |RED WOOLLY HOTTIE WHITE HEART.     |\n+---------+-----------------------------------+\nonly showing top 5 rows\n\n+---------+-----------------------------------+\n|InvoiceNo|Description                        |\n+---------+-----------------------------------+\n|536365   |WHITE HANGING HEART T-LIGHT HOLDER |\n|536365   |WHITE METAL LANTERN                |\n|536365   |CREAM CUPID HEARTS COAT HANGER     |\n|536365   |KNITTED UNION FLAG HOT WATER BOTTLE|\n|536365   |RED WOOLLY HOTTIE WHITE HEART.     |\n+---------+-----------------------------------+\nonly showing top 5 rows\n\n+---------+-----------+\n|InvoiceNo|Description|\n+---------+-----------+\n+---------+-----------+\n\n+---------+-----------------------------+\n|InvoiceNo|Description                  |\n+---------+-----------------------------+\n|536366   |HAND WARMER UNION JACK       |\n|536366   |HAND WARMER RED POLKA DOT    |\n|536367   |ASSORTED COLOUR BIRD ORNAMENT|\n|536367   |POPPY'S PLAYHOUSE BEDROOM    |\n|536367   |POPPY'S PLAYHOUSE KITCHEN    |\n+---------+-----------------------------+\nonly showing top 5 rows\n\n+---------+-----------------------------+\n|InvoiceNo|Description                  |\n+---------+-----------------------------+\n|536366   |HAND WARMER UNION JACK       |\n|536366   |HAND WARMER RED POLKA DOT    |\n|536367   |ASSORTED COLOUR BIRD ORNAMENT|\n|536367   |POPPY'S PLAYHOUSE BEDROOM    |\n|536367   |POPPY'S PLAYHOUSE KITCHEN    |\n+---------+-----------------------------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1530432074831_244639468","id":"20180701-133114_285802371","dateCreated":"2018-07-01T13:31:14+0530","dateStarted":"2018-07-01T21:20:47+0530","dateFinished":"2018-07-01T21:20:48+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:248"},{"text":"// .or operator for making condition base result\nval priceFilter = col(\"UnitPrice\") > 600\nval desFilter =  col(\"Description\").contains(\"POSTAGE\")\n\ndf.where(col(\"StockCode\").isin(\"DOT\")).where(priceFilter.or(desFilter)).show(5,false)","user":"anonymous","dateUpdated":"2018-07-01T21:34:57+0530","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"priceFilter: org.apache.spark.sql.Column = (UnitPrice > 600)\ndesFilter: org.apache.spark.sql.Column = contains(Description, POSTAGE)\n+---------+---------+--------------+--------+---------------------+---------+----------+--------------+\n|InvoiceNo|StockCode|Description   |Quantity|InvoiceDate          |UnitPrice|CustomerID|Country       |\n+---------+---------+--------------+--------+---------------------+---------+----------+--------------+\n|536544   |DOT      |DOTCOM POSTAGE|1       |2010-12-01 14:32:00.0|569.77   |null      |United Kingdom|\n|536592   |DOT      |DOTCOM POSTAGE|1       |2010-12-01 17:06:00.0|607.49   |null      |United Kingdom|\n+---------+---------+--------------+--------+---------------------+---------+----------+--------------+\n\n"}]},"apps":[],"jobName":"paragraph_1530432601746_1641801165","id":"20180701-134001_1398474133","dateCreated":"2018-07-01T13:40:01+0530","dateStarted":"2018-07-01T21:34:01+0530","dateFinished":"2018-07-01T21:34:02+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:249"},{"text":"val DOTCodeFilter = col(\"StockCode\") === \"DOT\"\n\ndf.withColumn(\"isExpensive\",DOTCodeFilter.and(priceFilter.or(desFilter)) )\n.where(\"isExpensive\")\n.select(\"unitPrice\", \"isExpensive\")\n.show(5,false)","user":"anonymous","dateUpdated":"2018-07-01T21:41:21+0530","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"DOTCodeFilter: org.apache.spark.sql.Column = (StockCode = DOT)\n+---------+-----------+\n|unitPrice|isExpensive|\n+---------+-----------+\n|569.77   |true       |\n|607.49   |true       |\n+---------+-----------+\n\n"}]},"apps":[],"jobName":"paragraph_1530460667772_336980030","id":"20180701-212747_606848221","dateCreated":"2018-07-01T21:27:47+0530","dateStarted":"2018-07-01T21:41:21+0530","dateFinished":"2018-07-01T21:45:08+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:250"},{"text":"df.withColumn(\"isExpensive\", not(col(\"UnitPrice\").leq(250)))\n.filter(\"isExpensive\")\n.select(\"UnitPrice\", \"isExpensive\")\n.show(5,false)\n\n// same as above with expression format\ndf.withColumn(\"isExpensive\", expr(\"NOT UnitPrice <= 250\"))\n.filter(\"isExpensive\")\n.select(\"UnitPrice\", \"isExpensive\")\n.show(5,false)","user":"anonymous","dateUpdated":"2018-07-01T21:57:06+0530","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+-----------+\n|UnitPrice|isExpensive|\n+---------+-----------+\n|569.77   |true       |\n|607.49   |true       |\n+---------+-----------+\n\n+---------+-----------+\n|UnitPrice|isExpensive|\n+---------+-----------+\n|569.77   |true       |\n|607.49   |true       |\n+---------+-----------+\n\n"}]},"apps":[],"jobName":"paragraph_1530461481866_1878648615","id":"20180701-214121_2131349590","dateCreated":"2018-07-01T21:41:21+0530","dateStarted":"2018-07-01T21:57:06+0530","dateFinished":"2018-07-01T21:57:07+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:251"},{"text":"df.where(col(\"Description\").eqNullSafe(\"DOTCOM POSTAGE\")).show()","user":"anonymous","dateUpdated":"2018-07-01T22:02:16+0530","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+---------+--------------+--------+--------------------+---------+----------+--------------+\n|InvoiceNo|StockCode|   Description|Quantity|         InvoiceDate|UnitPrice|CustomerID|       Country|\n+---------+---------+--------------+--------+--------------------+---------+----------+--------------+\n|   536544|      DOT|DOTCOM POSTAGE|       1|2010-12-01 14:32:...|   569.77|      null|United Kingdom|\n|   536592|      DOT|DOTCOM POSTAGE|       1|2010-12-01 17:06:...|   607.49|      null|United Kingdom|\n+---------+---------+--------------+--------+--------------------+---------+----------+--------------+\n\n"}]},"apps":[],"jobName":"paragraph_1530462076951_1346803565","id":"20180701-215116_368356022","dateCreated":"2018-07-01T21:51:16+0530","dateStarted":"2018-07-01T22:02:16+0530","dateFinished":"2018-07-01T22:02:17+0530","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:252"},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1530462579982_-344848692","id":"20180701-215939_1424462483","dateCreated":"2018-07-01T21:59:39+0530","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:253","dateUpdated":"2018-09-30T13:51:28+0530","title":"Working with Numbers"}],"name":"Spark_Chapter 6","id":"2DJFTGCGP","angularObjects":{"2DDEEHGYZ:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}